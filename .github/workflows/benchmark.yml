name: "Benchmark"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '18 13 * * 6'

jobs:
  on-linux-valgrind:
    name: Benchmark arithmetica on Ubuntu.
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Set up NASM
      uses: ilammy/setup-nasm@v1.3.0
    - name: Checkout repo.
      uses: actions/checkout@v2
      with:
        persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal access token.
        fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
    - name: Install libcurl and JSON library headers.
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev
        sudo apt-get install nlohmann-json3-dev
    - name: Clone basic_math_operations.
      run: |
        git submodule update --init --recursive
    - name: Compile benchmark in release.
      run: |
        cmake --no-warn-unused-cli -DBUILD_BMO=ON -DENABLE_BENCHMARK=ON -DCMAKE_BUILD_TYPE=Release -S . -B build -G "Unix Makefiles"
        cmake --build build --config Release --target all -j 10 --
        chmod +x build/src/benchmark/benchmark
    - name: Git Version
      id: version
      uses: codacy/git-version@2.7.1
    - name: Use the version
      run: |
        echo ${{ steps.version.outputs.version }} > uid.txt
        echo ${{ steps.version.outputs.version }}
        g++ src/benchmark/get-unique-identifier.cpp -O3
        ./a.out uid.txt
        echo "UID=$(cat uid.txt)" >> $GITHUB_ENV
    - name: Benchmark (pull request)
      if: github.event_name == 'pull_request'
      run: |
        ./build/src/benchmark/benchmark --no-live-updates --unique-identifier ${{ env.UID }}
    - name: Benchmark (normal)
      if: github.event_name != 'pull_request'
      run: |
        ./build/src/benchmark/benchmark --no-live-updates --unique-identifier ${{ env.UID }} --upload ${{ secrets.PRIVATE_UPLOAD_SERVER }} ${{ secrets.PRIVATE_UPLOAD_KEY }} ${{ secrets.PRIVATE_UPLOAD_NUMBER }}
